{"ast":null,"code":"var _jsxFileName = \"/home/gaelgarcia/Documents/Escuela/6sem/IngenieriaDeSoftware/Mios/P5-2/conexion/src/Login.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport LoginForm from './LoginForm';\nimport LoggedIn from './LoggedIn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserHandler = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/login', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: 'ferfong',\n            password: '123'\n          }) // Change this to your actual credentials\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setUser(data.user);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchUserHandler();\n  }, []); // Empty dependency array to run only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), user && /*#__PURE__*/_jsxDEV(LoggedIn, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }, this), !user && !error && /*#__PURE__*/_jsxDEV(LoginForm, {\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"FoT8xzvemVmWV60BhcL+ltjm2pQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","LoginForm","LoggedIn","jsxDEV","_jsxDEV","Login","props","_s","user","setUser","error","setError","fetchUserHandler","response","fetch","method","headers","body","JSON","stringify","name","password","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gaelgarcia/Documents/Escuela/6sem/IngenieriaDeSoftware/Mios/P5-2/conexion/src/Login.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport LoginForm from './LoginForm';\nimport LoggedIn from './LoggedIn';\n\nfunction Login(props) {\n    const [user, setUser] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchUserHandler = async () => {\n            try {\n                const response = await fetch('http://127.0.0.1:5000/login', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ name: 'ferfong', password: '123' }) // Change this to your actual credentials\n                });\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setUser(data.user);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        fetchUserHandler();\n    }, []); // Empty dependency array to run only once on mount\n\n    return (\n        <div>\n            {error && <p>Error: {error}</p>}\n            {user && <LoggedIn user={user}/>}\n            {!user && !error && <LoginForm setUser={setUser}/>}\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UACxDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAM,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC;QACF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClChB,OAAO,CAACe,IAAI,CAAChB,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACgB,OAAO,CAAC;MAC3B;IACJ,CAAC;IAEDd,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIR,OAAA;IAAAuB,QAAA,GACKjB,KAAK,iBAAIN,OAAA;MAAAuB,QAAA,GAAG,SAAO,EAACjB,KAAK;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BvB,IAAI,iBAAIJ,OAAA,CAACF,QAAQ;MAACM,IAAI,EAAEA;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC/B,CAACvB,IAAI,IAAI,CAACE,KAAK,iBAAIN,OAAA,CAACH,SAAS;MAACQ,OAAO,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAACxB,EAAA,CAlCQF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAoCd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}